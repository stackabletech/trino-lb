---
apiVersion: trino.stackable.tech/v1alpha1
kind: TrinoCluster
metadata:
  name: trino-default-1
spec:
  image:
{% if test_scenario['values']['trino'].find(",") > 0 %}
    custom: "{{ test_scenario['values']['trino'].split(',')[1] }}"
    productVersion: "{{ test_scenario['values']['trino'].split(',')[0] }}"
{% else %}
    productVersion: "{{ test_scenario['values']['trino'] }}"
{% endif %}
    pullPolicy: IfNotPresent
  clusterConfig:
    catalogLabelSelector:
      matchLabels:
        trino: trino
    authentication:
      - authenticationClass: trino-users-auth
{% if lookup('env', 'VECTOR_AGGREGATOR') %}
    vectorAggregatorConfigMapName: vector-aggregator-discovery
{% endif %}
  coordinators:
    config:
      logging:
        enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
    roleGroups:
      default:
        replicas: 1
  workers:
    config:
      gracefulShutdownTimeout: 60s # Let the test run faster
      logging:
        enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
    roleGroups:
      default:
        replicas: 1
---
apiVersion: authentication.stackable.tech/v1alpha1
kind: AuthenticationClass
metadata:
  name: trino-users-auth
spec:
  provider:
    static:
      userCredentialsSecret:
        name: trino-users
---
apiVersion: v1
kind: Secret
metadata:
  name: trino-users
type: kubernetes.io/opaque
stringData:
  admin: adminadmin
  alice: alicealice
  bob: bobbob
