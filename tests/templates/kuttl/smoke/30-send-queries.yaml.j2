---
apiVersion: batch/v1
kind: Job
metadata:
  name: send-queries
spec:
  template:
    spec:
      containers:
        - name: send-queries
          image: oci.stackable.tech/sdp/trino-cli:{{ test_scenario['values']['trino'] }}-stackable0.0.0-dev
          command:
            - /bin/bash
            - -x
            - -euo
            - pipefail
            - -c
            - |
              # Query Trino directly
              echo "show catalogs" | TRINO_PASSWORD=alicealice java -jar trino-cli-executable.jar --server https://trino-default-1-coordinator:8443 --insecure --user alice --password
              echo "select count(*) from tpch.sf1.customer" | TRINO_PASSWORD=alicealice java -jar trino-cli-executable.jar --server https://trino-default-1-coordinator:8443 --insecure --user alice --password

              # Query trino-lb
              echo "show catalogs" | TRINO_PASSWORD=alicealice java -jar trino-cli-executable.jar --server https://trino-lb:8443 --insecure --user alice --password
              echo "select count(*) from tpch.sf1.customer" | TRINO_PASSWORD=alicealice java -jar trino-cli-executable.jar --server https://trino-lb:8443 --insecure --user alice --password

              # Send multiple queries in parallel to trino-lb
              # Number of parallel requests
              NUM_REQUESTS=10

              # Command to run the query
              QUERY_COMMAND='echo "select count(*) from tpch.sf1.customer" | TRINO_PASSWORD=alicealice java -jar trino-cli-executable.jar --server https://trino-lb:8443 --insecure --user alice --password'

              # Array to store process IDs (PIDs)
              pids=()

              # Run requests in parallel
              for i in $(seq 1 $NUM_REQUESTS); do
                  bash -c "$QUERY_COMMAND" &
                  pids+=("$!")
              done

              # Wait for all processes to complete and check exit codes
              for pid in "${pids[@]}"; do
                  wait "$pid"
                  if [ $? -ne 0 ]; then
                      echo "One of the requests failed with a non-zero exit code."
                      exit 1
                  fi
              done

              echo "All requests completed successfully."
      restartPolicy: OnFailure
