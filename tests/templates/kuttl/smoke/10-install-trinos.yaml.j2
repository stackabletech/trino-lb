{% for name in ['trino-s-1', 'trino-m-1'] %}
---
apiVersion: trino.stackable.tech/v1alpha1
kind: TrinoCluster
metadata:
  name: {{ name }}
spec:
  image:
{% if test_scenario['values']['trino'].find(",") > 0 %}
    custom: "{{ test_scenario['values']['trino'].split(',')[1] }}"
    productVersion: "{{ test_scenario['values']['trino'].split(',')[0] }}"
{% else %}
    productVersion: "{{ test_scenario['values']['trino'] }}"
{% endif %}
    pullPolicy: IfNotPresent
  clusterConfig:
    catalogLabelSelector:
      matchLabels:
        trino: trino
    authentication:
      - authenticationClass: trino-users-auth
{% if lookup('env', 'VECTOR_AGGREGATOR') %}
    vectorAggregatorConfigMapName: vector-aggregator-discovery
{% endif %}
  coordinators:
    config:
      resources:
        cpu:
          min: 250m
          max: "1"
      logging:
        enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
    configOverrides: &configOverrides
      config.properties:
        event-listener.config-files: /tmp/http-event-listener.properties
        # http-server.process-forwarded: "true"
    podOverrides: &podOverrides
      spec:
        containers:
          - name: trino
            env:
              - name: NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
            volumeMounts:
              - name: http-event-listener-config
                mountPath: /tmp/http-event-listener.properties
                subPath: http-event-listener.properties
        volumes:
          - name: http-event-listener-config
            configMap:
              name: trino-http-event-listener-config
    roleGroups:
      default:
        replicas: 1
  workers:
    config:
      resources:
        cpu:
          min: 250m
          max: "1"
      gracefulShutdownTimeout: 60s # Let the test run faster
      logging:
        enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
    configOverrides: *configOverrides
    podOverrides: *podOverrides
    roleGroups:
      default:
        replicas: 1
{% endfor %}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: trino-http-event-listener-config
data:
  http-event-listener.properties: |
    event-listener.name=http

    http-event-listener.connect-ingest-uri=https://trino-lb.${ENV:NAMESPACE}.svc.cluster.local:8443/v1/trino-event-listener
    http-event-listener.connect-retry-count=10
    http-event-listener.http-client.trust-store-path=/stackable/server_tls/truststore.p12
    http-event-listener.http-client.trust-store-password=changeit

    http-event-listener.log-created=true
    http-event-listener.log-completed=true
    http-event-listener.log-split=false
---
apiVersion: authentication.stackable.tech/v1alpha1
kind: AuthenticationClass
metadata:
  name: trino-users-auth
spec:
  provider:
    static:
      userCredentialsSecret:
        name: trino-users
---
apiVersion: v1
kind: Secret
metadata:
  name: trino-users
stringData:
  admin: adminadmin
  alice: alicealice
  bob: bobbob
