---
apiVersion: kuttl.dev/v1beta1
kind: TestStep
commands:
  - script: kubectl -n $NAMESPACE create secret generic trino-lb-config --from-file=trino-lb-config.yaml=20_trino-lb-config.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trino-lb
spec:
  # I'm a bit surprised that 3 replicas work in combination with inMemory persistence :)
  # Maybe Kubernetes is sticky for some reason, maybe trino-clients will retry call until they get
  # to the correct trino-lb instance...
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: trino-lb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: trino-lb
    spec:
      containers:
        - name: trino-lb
          image: {{ test_scenario['values']['trino-lb'] }}
          imagePullPolicy: IfNotPresent
          command: ["trino-lb", "--config-file", "/etc/stackable/trino-lb/config/trino-lb-config.yaml"]
          ports:
            - containerPort: 8080
            - containerPort: 8443
            - containerPort: 9090
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 256Mi
          volumeMounts:
            - mountPath: /etc/stackable/trino-lb/config/
              name: config
            - mountPath: /certificates/
              name: certificates
      volumes:
        - name: config
          secret:
            secretName: trino-lb-config
        - name: certificates
          secret:
            secretName: trino-lb-certificates
      serviceAccountName: trino-lb
---
apiVersion: v1
kind: Service
metadata:
  name: trino-lb
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: trino-lb
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      name: http
    - protocol: TCP
      port: 8443
      targetPort: 8443
      name: https
    - protocol: TCP
      port: 9090
      targetPort: 9090
      name: metrics
