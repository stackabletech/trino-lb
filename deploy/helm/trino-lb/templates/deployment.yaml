apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-deployment
  labels:
    app.kubernetes.io/name: trino-lb
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: trino-lb
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: trino-lb
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: trino-lb
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["trino-lb", "--config-file", "/etc/stackable/trino-lb/config/trino-lb-config.yaml"]
          # env:
          #   - name: RUST_LOG
          #     value: debug
          ports:
            - containerPort: 8443
            - containerPort: 9090
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /etc/stackable/trino-lb/config/
              name: config
            - mountPath: /certificates/
              name: certificates
      volumes:
        - name: config
          secret:
            secretName: {{ .Release.Name }}-config
        # - name: certificates
        #   secret:
        #     secretName: {{ .Release.Name }}-certificates
        - name: certificates
          ephemeral:
            volumeClaimTemplate:
              metadata:
                annotations:
                  secrets.stackable.tech/class: tls
                  secrets.stackable.tech/scope: pod,service=trino-lb
                  secrets.stackable.tech/format: tls-pem
              spec:
                storageClassName: secrets.stackable.tech
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: "1"
      serviceAccountName: {{ .Release.Name }}
