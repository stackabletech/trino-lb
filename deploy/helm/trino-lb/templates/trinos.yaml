{{- $trinos := list "trino-s-1" "trino-m-1" "trino-m-2" }}
{{- range $trinos }}
---
apiVersion: trino.stackable.tech/v1alpha1
kind: TrinoCluster
metadata:
  name: {{ . }}
  namespace: default
spec:
  image:
    productVersion: "455"
  clusterConfig:
    catalogLabelSelector:
      matchLabels:
        trino: trino
    listenerClass: external-stable
    authentication:
      - authenticationClass: trino-users
  coordinators:
    configOverrides: &configOverrides
      config.properties:
        tracing.enabled: "true"
        tracing.exporter.endpoint: http://jaeger-collector.default.svc.cluster.local:4317
        event-listener.config-files: /tmp/http-event-listener.properties
    podOverrides: &podOverrides
      spec:
        containers:
          - name: trino
            volumeMounts:
              - name: http-event-listener-config
                mountPath: /tmp/http-event-listener.properties
                subPath: http-event-listener.properties
        volumes:
          - name: http-event-listener-config
            configMap:
              name: {{ . }}-http-event-listener-config
    roleGroups:
      default:
        replicas: 1
  workers:
    configOverrides: *configOverrides
    podOverrides: *podOverrides
    roleGroups:
      default:
        replicas: 1
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ . }}-http-event-listener-config
  namespace: default
data:
  http-event-listener.properties: |
    event-listener.name=http

    http-event-listener.connect-ingest-uri=https://trino-lb.trino-lb.svc.cluster.local:8443/v1/trino-event-listener
    http-event-listener.connect-retry-count=10
    # http-event-listener.connect-http-headers="Trino-Cluster:{{ . }}" # IS BROKEN!
    http-event-listener.http-client.trust-store-path=/stackable/server_tls/truststore.p12
    http-event-listener.http-client.trust-store-password=changeit

    http-event-listener.log-created=true
    http-event-listener.log-completed=true
    http-event-listener.log-split=false
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: trino-users
  namespace: default
type: kubernetes.io/opaque
stringData:
  admin: adminadmin
---
apiVersion: authentication.stackable.tech/v1alpha1
kind: AuthenticationClass
metadata:
  name: trino-users
spec:
  provider:
    static:
      userCredentialsSecret:
        name: trino-users
---
apiVersion: trino.stackable.tech/v1alpha1
kind: TrinoCatalog
metadata:
  name: tpch
  namespace: default
  labels:
    trino: trino
spec:
  connector:
    tpch: {}
